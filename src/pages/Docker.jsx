
export default function Docker() {
  return (
    <div>
      <h2 className="text-3xl font-bold mb-6 text-pokeYellow">Conteneriza√ß√£o com Docker</h2>

      <p className="mb-4">
        A aplica√ß√£o <strong>Pok√©Crawler</strong> √© composta por m√∫ltiplos servi√ßos (backend, frontend, crawler, base de dados e autentica√ß√£o), e cada um √© empacotado num <strong>container Docker</strong> para garantir isolamento, portabilidade e reprodutibilidade.
      </p>

      <p className="mb-4">
        Embora anteriormente tenha sido utilizado um ficheiro <code>docker-compose.yaml</code> para orquestra√ß√£o local, esta abordagem foi substitu√≠da por um sistema mais robusto com <strong>Ansible</strong>. O Ansible permite gerir todos os servi√ßos de forma modular e remota, utilizando a cole√ß√£o <code>community.docker</code> para criar, iniciar e configurar os containers.
      </p>

      <h3 className="text-xl font-semibold mb-2">üì¶ Exemplo de Dockerfile (Backend)</h3>
      <pre className="bg-gray-100 p-4 rounded text-sm overflow-x-auto mb-6">
        {`FROM python:3.11
        WORKDIR /app
        COPY . .
        RUN pip install -r requirements.txt
        CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]`}
      </pre>

      <p className="mb-4">
        Cada servi√ßo possui o seu pr√≥prio <code>Dockerfile</code> adaptado √† stack tecnol√≥gica utilizada. Estes ficheiros s√£o usados para construir as imagens Docker que s√£o depois lan√ßadas por Ansible ou Jenkins (via CI/CD).
      </p>

      <h3 className="text-xl font-semibold mb-2">üîó Comunica√ß√£o entre containers</h3>
      <p className="mb-4">
        Todos os containers comunicam entre si numa rede definida com o nome <code>pokecrawler_network</code>, onde os servi√ßos s√£o referenciados pelos seus aliases. Por exemplo, o backend pode aceder ao banco de dados usando <code>postgres</code> como hostname.
      </p>

      <h3 className="text-xl font-semibold mb-2">üóÇÔ∏è Volumes e persist√™ncia</h3>
      <p className="mb-4">
        A base de dados PostgreSQL utiliza volumes Docker para garantir que os dados persistem entre reinicializa√ß√µes. O ficheiro de inicializa√ß√£o <code>init.sql</code> √© montado no container em <code>/docker-entrypoint-initdb.d</code> via Ansible.
      </p>

      <p>
        A utiliza√ß√£o de <strong>containers Docker</strong> foi essencial para garantir um ambiente de desenvolvimento e produ√ß√£o id√™ntico, facilitando tamb√©m o deploy cont√≠nuo automatizado via Jenkins.
      </p>
    </div>
  );
}